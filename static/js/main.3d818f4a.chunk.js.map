{"version":3,"sources":["redux/rockets/rocketTypes.js","redux/rockets/rocketReducer.js","redux/missions/missionTypes.js","redux/missions/missionReducer.js","redux/store.js","Components/Navbar.jsx","Components/MyMissionsComponent.jsx","Components/MyRockets.jsx","Pages/ProfilePage.jsx","Components/Rocket.jsx","redux/rockets/rocketActions.js","Components/RocketsList.jsx","Pages/RocketsPage.jsx","redux/missions/missionActions.js","Pages/MissionsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["TOGGLE_RESERVATION","FETCH_ROCKETS","initialState","rockets","rocketsReducer","state","action","type","payload","map","rocket","id","added","ADD_MISSION","REMOVE_MISSION","UPDATE_MISSION","FETCH_MISSIONS_REQUEST","FETCH_MISSIONS_SUCCESS","FETCH_MISSIONS_FAILURE","missions","loading","error","missionReducer","filter","mission","mixReducer","combineReducers","missionsReducer","store","createStore","applyMiddleware","logger","thunk","Navbar","className","to","src","alt","width","height","path","text","link","activeClassName","exact","connect","missionData","length","reserved","name","MyRockets","myMyrockets","useSelector","ProfilePage","PageName","MyMissionsComponent","Rocket","description","image","dispatch","useDispatch","buttonText","buttonClass","onClick","e","preventDefault","target","defaultProps","RocketsList","useEffect","a","axios","get","response","data","entry","rocket_id","rocket_name","flickrImages","flickr_images","RocketsPage","fetchMissions","then","mapResponse","mission_id","mission_name","catch","fetchMissionsFailure","updateMission","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d818f4a.chunk.js","sourcesContent":["export const TOGGLE_RESERVATION = 'TOGGLE_RESERVATION';\r\nexport const FETCH_ROCKETS = 'FETCH_ROCKETS';\r\nexport const FETCH_ROCKETS_FAILURE = 'FETCH_ROCKETS_FAILURE';\r\n","import {\r\n  TOGGLE_RESERVATION,\r\n  FETCH_ROCKETS,\r\n} from './rocketTypes';\r\n\r\nconst initialState = {\r\n  rockets: [],\r\n};\r\n\r\nconst rocketsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ROCKETS:\r\n      return { ...state, rockets: action.payload };\r\n    case TOGGLE_RESERVATION:\r\n      return {\r\n        ...state,\r\n        rockets: state.rockets.map((rocket) => {\r\n          if (rocket.id === action.payload) return { ...rocket, added: !rocket.added };\r\n          return rocket;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rocketsReducer;\r\n","export const ADD_MISSION = 'ADD_MISSION';\r\nexport const REMOVE_MISSION = 'REMOVE_MISSION';\r\nexport const UPDATE_MISSION = 'UPDATE_MISSION';\r\nexport const FETCH_MISSIONS_REQUEST = 'FETCH_MISSIONS_REQUEST';\r\nexport const FETCH_MISSIONS_SUCCESS = 'FETCH_MISSIONS_SUCCESS';\r\nexport const FETCH_MISSIONS_FAILURE = 'FETCH_MISSIONS_FAILURE';\r\n","import {\r\n  ADD_MISSION,\r\n  REMOVE_MISSION,\r\n  UPDATE_MISSION,\r\n  FETCH_MISSIONS_REQUEST,\r\n  FETCH_MISSIONS_SUCCESS,\r\n  FETCH_MISSIONS_FAILURE,\r\n} from './missionTypes';\r\n\r\nconst initialState = {\r\n  missions: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst missionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MISSION:\r\n      return {\r\n        ...state,\r\n        missions: [action.payload, ...state.missions],\r\n      };\r\n    case REMOVE_MISSION:\r\n      return {\r\n        ...state,\r\n        missions: state.missions.filter((mission) => mission.id !== action.payload),\r\n      };\r\n    case UPDATE_MISSION:\r\n      return {\r\n        ...state,\r\n        missions: state.missions.map(\r\n          (mission) => (mission.id === action.payload.id ? action.payload : mission),\r\n        ),\r\n      };\r\n    case FETCH_MISSIONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_MISSIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        missions: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MISSIONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default missionReducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers here\r\nimport rocketsReducer from './rockets/rocketReducer';\r\nimport missionsReducer from './missions/missionReducer';\r\n\r\nconst mixReducer = combineReducers({\r\n  // add reducers here\r\n  rockets: rocketsReducer,\r\n  missions: missionsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  mixReducer,\r\n  applyMiddleware(logger, thunk),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: '/',\r\n      text: 'Profile',\r\n    },\r\n    {\r\n      id: 2,\r\n      path: '/rockets',\r\n      text: 'Rockets',\r\n    },\r\n    {\r\n      id: 3,\r\n      path: '/missions',\r\n      text: 'Missions',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-white fixed-top border-bottom shadow\">\r\n      <div className=\"container-fluid ms-5\">\r\n        <NavLink className=\"navbar-brand h1\" to=\"/\">\r\n          <h3 className=\"fw-bold mt-1\">\r\n            <img className=\"me-2\" src=\"SpaceLogo.png\" alt=\"Girl in a jacket\" width=\"40\" height=\"40\" />\r\n            Space Travelers&apos; Hub\r\n          </h3>\r\n        </NavLink>\r\n\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse mb-2 me-auto\" id=\"navbarNavAltMarkup\">\r\n          <ul className=\"navbar-nav ms-auto text-light me-3\">\r\n            {links.map((link) => (\r\n              <li className=\"nav-link me-3\" key={link.id}>\r\n                <NavLink to={link.path} activeClassName=\"active-link\" exact>\r\n                  {link.text}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfilePage = ({ missionData }) => {\r\n  if (missionData.missions.length === 0) {\r\n    return <div>No Missions loaded yet...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"border col-12\">\r\n        {\r\n          missionData\r\n          && missionData.missions\r\n          && missionData.missions\r\n            .filter((mission) => mission.reserved === true)\r\n            .map((mission) => (\r\n              <tr className=\"border\" key={mission.id}>\r\n                <td className=\"align-middle\">\r\n                  <p className=\"mt-3 ms-2\">\r\n                    {mission.name}\r\n                  </p>\r\n                </td>\r\n              </tr>\r\n            ))\r\n        }\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfilePage.propTypes = {\r\n  missionData: PropTypes.shape({\r\n    loading: PropTypes.bool,\r\n    error: PropTypes.string,\r\n    missions: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n      reserved: PropTypes.bool,\r\n    })),\r\n  }).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  missionData: state.missions,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n","import { useSelector } from 'react-redux';\r\n\r\nconst MyRockets = () => {\r\n  const rockets = useSelector((state) => state.rockets.rockets);\r\n  const myMyrockets = rockets.filter((rocket) => rocket.added === true);\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"border col-12\">\r\n        {myMyrockets.length > 0\r\n          && myMyrockets.map((rocket) => (\r\n            <tr className=\"border\" key={rocket.id}>\r\n              <td className=\"align-middle\">\r\n                <p className=\"mt-3 ms-2\">\r\n                  {rocket.name}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRockets;\r\n","import React from 'react';\r\nimport MyMissionsComponent from '../Components/MyMissionsComponent';\r\nimport MyRockets from '../Components/MyRockets';\r\n\r\nconst ProfilePage = () => {\r\n  const PageName = <h1>Profile Page</h1>;\r\n\r\n  return (\r\n    <div>\r\n      {PageName}\r\n      <div className=\"d-flex flex-row col-12\">\r\n        <div className=\"col-6 p-3\">\r\n          <h2>My Missions</h2>\r\n          <MyMissionsComponent />\r\n        </div>\r\n        <div className=\"col-6 p-3\">\r\n          <h2>My Rockets</h2>\r\n          <MyRockets />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleReservation } from '../redux/rockets/rocketActions';\r\n\r\nconst Rocket = ({\r\n  id, name, description, image, added,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const buttonText = added ? 'CANCEL RESERVATION' : 'RESERVE ROCKET';\r\n  const buttonClass = added ? 'btn btn-secondary btn-cancel' : 'btn btn-primary btn-reserve';\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(toggleReservation(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <div className=\" d-flex flex-row mb-5\" data-testid=\"rocket-item-group\">\r\n      <div className=\"col-2 p\">\r\n        <img alt=\"just a rocket\" src={image} className=\"rocket-img px-2\" />\r\n      </div>\r\n      <div className=\"d-flex flex-column col-10 px-2\">\r\n        <h3>{name}</h3>\r\n        <p>\r\n          {added && <span className=\"badge bg-info\">Reserved</span>}\r\n          <span>{description}</span>\r\n        </p>\r\n        <button id={id} onClick={handleClick} type=\"submit\" className={buttonClass}>{buttonText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRocket.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  added: PropTypes.bool,\r\n};\r\n\r\nRocket.defaultProps = {\r\n  added: false,\r\n};\r\n\r\nexport default Rocket;\r\n","import axios from 'axios';\r\nimport {\r\n  TOGGLE_RESERVATION,\r\n  FETCH_ROCKETS,\r\n  FETCH_ROCKETS_FAILURE,\r\n} from './rocketTypes';\r\n\r\nexport const toggleReservation = (payload) => ({\r\n  type: TOGGLE_RESERVATION,\r\n  payload,\r\n});\r\n\r\nconst fetchRocketRequest = (payload) => ({\r\n  type: FETCH_ROCKETS,\r\n  payload,\r\n});\r\n\r\nconst fetchRocketFailure = () => ({\r\n  type: FETCH_ROCKETS_FAILURE,\r\n});\r\n\r\nexport const fetchRockets = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('https://api.spacexdata.com/v3/rockets');\r\n    const rockets = response.data.map((entry) => {\r\n      const id = entry.rocket_id;\r\n      const name = entry.rocket_name;\r\n      const { description, flickr_images: flickrImages } = entry;\r\n      const added = false;\r\n      const rocket = {\r\n        id, name, description, flickrImages, added,\r\n      };\r\n      return rocket;\r\n    });\r\n    dispatch(fetchRocketRequest(rockets));\r\n  } catch (error) {\r\n    dispatch(fetchRocketFailure());\r\n  }\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchRockets } from '../redux/rockets/rocketActions';\r\nimport Rocket from './Rocket';\r\n\r\nconst RocketsList = () => {\r\n  const rockets = useSelector((state) => state.rockets.rockets);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (rockets.length === 0) {\r\n      dispatch(fetchRockets());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"p-5\" data-testid=\"rocket-list-test\">\r\n      {rockets.map((rocket) => (\r\n        <li key={rocket.id}>\r\n          <Rocket\r\n            id={rocket.id}\r\n            name={rocket.name}\r\n            description={rocket.description}\r\n            image={rocket.flickrImages[0]}\r\n            added={rocket.added}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RocketsList;\r\n","import React from 'react';\r\nimport RocketsList from '../Components/RocketsList';\r\n\r\nconst RocketsPage = () => (\r\n  <div>\r\n    <RocketsList />\r\n  </div>\r\n);\r\n\r\nexport default RocketsPage;\r\n","import axios from 'axios';\r\nimport {\r\n  ADD_MISSION,\r\n  REMOVE_MISSION,\r\n  UPDATE_MISSION,\r\n  FETCH_MISSIONS_REQUEST,\r\n  FETCH_MISSIONS_SUCCESS,\r\n  FETCH_MISSIONS_FAILURE,\r\n} from './missionTypes';\r\n\r\nexport const addMission = (mission) => ({\r\n  type: ADD_MISSION,\r\n  payload: mission,\r\n});\r\n\r\nexport const removeMission = (missionId) => ({\r\n  type: REMOVE_MISSION,\r\n  payload: missionId,\r\n});\r\n\r\nexport const updateMission = (mission) => ({\r\n  type: UPDATE_MISSION,\r\n  payload: mission,\r\n});\r\n\r\nexport const fetchMissionsRequest = () => ({\r\n  type: FETCH_MISSIONS_REQUEST,\r\n});\r\n\r\nexport const fetchMissionsSuccess = (missions) => ({\r\n  type: FETCH_MISSIONS_SUCCESS,\r\n  payload: missions,\r\n});\r\n\r\nexport const fetchMissionsFailure = (error) => ({\r\n  type: FETCH_MISSIONS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchMissions = () => (dispatch) => {\r\n  dispatch(fetchMissionsRequest());\r\n  axios.get('https://api.spacexdata.com/v3/missions')\r\n    .then((response) => {\r\n      const mapResponse = response.data.map((mission) => ({\r\n        id: mission.mission_id,\r\n        name: mission.mission_name,\r\n        description: mission.description,\r\n        reserved: false,\r\n      }));\r\n      dispatch(fetchMissionsSuccess(mapResponse));\r\n    })\r\n    .catch((error) => dispatch(fetchMissionsFailure(error)));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchMissions, updateMission } from '../redux';\r\n\r\nconst MissionsPage = ({ updateMission, fetchMissions, missionData }) => {\r\n  useEffect(() => {\r\n    if (missionData.missions.length === 0) {\r\n      fetchMissions();\r\n    }\r\n  }, []);\r\n\r\n  if (missionData.loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (missionData.error) {\r\n    return (\r\n      <div>\r\n        Error!\r\n        {missionData.error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Missions</h1>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr className=\"border\">\r\n            <th className=\"col-1 border\">Mission</th>\r\n            <th className=\"col-8 border\">Description</th>\r\n            <th className=\"col-1 border\">Status</th>\r\n            <th className=\"col-2 border\"> </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            missionData\r\n            && missionData.missions\r\n            && missionData.missions.map((mission) => (\r\n              <tr key={mission.id}>\r\n                <td className=\"border fw-bold\">{mission.name}</td>\r\n                <td className=\"border\">{mission.description}</td>\r\n                <td className=\"border align-middle\">\r\n                  <span\r\n                    className={mission.reserved ? 'badge bg-info text-dark' : 'badge bg-secondary'}\r\n                  >\r\n                    {mission.reserved ? 'Active member' : 'NOT A member'}\r\n                  </span>\r\n                </td>\r\n                <td className=\"border align-middle\">\r\n                  <button\r\n                    className={mission.reserved ? 'btn btn-outline-danger' : 'btn btn-outline-secondary'}\r\n                    type=\"button\"\r\n                    onClick={() => updateMission(\r\n                      { ...mission, reserved: !mission.reserved },\r\n                    )}\r\n                  >\r\n                    {mission.reserved ? 'Leave Mission' : 'Join Mission'}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nMissionsPage.propTypes = {\r\n  updateMission: PropTypes.func.isRequired,\r\n  fetchMissions: PropTypes.func.isRequired,\r\n  missionData: PropTypes.shape({\r\n    loading: PropTypes.bool,\r\n    error: PropTypes.string,\r\n    missions: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n      reserved: PropTypes.bool,\r\n    })),\r\n  }).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  missionData: state.missions,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMissions: () => dispatch(fetchMissions()),\r\n  updateMission: (mission) => dispatch(updateMission(mission)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MissionsPage);\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport Navbar from './Components/Navbar';\r\nimport ProfilePage from './Pages/ProfilePage';\r\nimport RocketsPage from './Pages/RocketsPage';\r\nimport MissionsPage from './Pages/MissionsPage';\r\n// import FetchLoaderComponent from './Components/FetchLoaderComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Navbar />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div data-testid=\"navBar\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <ProfilePage />\r\n            </Route>\r\n            <Route path=\"/rockets\">\r\n              <RocketsPage />\r\n            </Route>\r\n            <Route path=\"/missions\">\r\n              <MissionsPage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}